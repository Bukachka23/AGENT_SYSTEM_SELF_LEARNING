[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# Enable multiple rule categories
# Start with essential rules and add more as needed
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # Pyflakes
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "ANN",  # flake8-annotations
    "ASYNC",# flake8-async
    "S",    # flake8-bandit (security)
    "BLE",  # flake8-blind-except
    "FBT",  # flake8-boolean-trap
    "A",    # flake8-builtins
    "COM",  # flake8-commas
    "C90",  # McCabe complexity
    "DTZ",  # flake8-datetimez
    "EM",   # flake8-errmsg
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "G",    # flake8-logging-format
    "PIE",  # flake8-pie
    "PT",   # flake8-pytest-style
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SLOT", # flake8-slots
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "TCH",  # flake8-type-checking
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
    "PL",   # Pylint
    "TRY",  # tryceratops
    "FLY",  # flynt
    "PERF", # Perflint
    "RUF",  # Ruff-specific rules
]

# Ignore specific rules
ignore = [
    "E501",   # Line too long (let formatter handle this)
    "ANN101", # Missing type annotation for self
    "ANN102", # Missing type annotation for cls
    "ANN401", # Dynamically typed expressions (Any)
    "S101",   # Use of assert detected
    "S104",   # Possible binding to all interfaces
    "COM812", # Missing trailing comma (conflicts with formatter)
    "ISC001", # Single line implicit string concatenation (conflicts with formatter)
]

# Allow autofix for all enabled rules (when `--fix` is provided)
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
# Ignore certain rules in specific files
"__init__.py" = ["E402", "F401", "F403"]
"tests/**/*.py" = [
    "S101",    # asserts allowed in tests
    "ARG",     # Unused function args -> fixtures nevertheless are functionally relevant
    "FBT",     # Don't care about booleans as positional arguments in tests
    "PLR2004", # Magic value used in comparison
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
]
"conftest.py" = ["F401", "F403"]
"docs/conf.py" = ["A001", "D100"]
"scripts/**/*.py" = ["INP001"]  # No __init__.py needed in scripts

[tool.ruff.lint.mccabe]
# McCabe complexity
max-complexity = 10

[tool.ruff.lint.isort]
# Configure import sorting
known-first-party = []  # Add your package names here
combine-as-imports = true
split-on-trailing-comma = true
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.flake8-quotes]
# Prefer double quotes
inline-quotes = "double"
docstring-quotes = "double"

[tool.ruff.lint.flake8-annotations]
# Allow Any in type annotations
allow-star-arg-any = true
suppress-dummy-args = true

[tool.ruff.lint.flake8-builtins]
# Avoid shadowing Python builtins
builtins-ignorelist = ["id"]  # Common in Django/SQLAlchemy

[tool.ruff.lint.pylint]
# Set maximum number of arguments for functions/methods
max-args = 6
# Set maximum number of local variables
max-locals = 15
# Set maximum number of return statements
max-returns = 6
# Set maximum number of branches
max-branches = 12
# Set maximum number of statements
max-statements = 50

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Indent with spaces
indent-style = "space"

# Respect magic trailing commas
skip-magic-trailing-comma = false

# Automatically detect the appropriate line ending
line-ending = "auto"

# Format code in docstrings
docstring-code-format = true

# Set the line length limit used when formatting code in docstrings
docstring-code-line-length = 72